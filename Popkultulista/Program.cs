//<auto-generated />
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Popkultulista.Data;
using Popkultulista.Infrastructure;

namespace Popkultulista;

/// <summary>
/// 
/// </summary>
public class Program
{
    /// <summary>
    /// 
    /// </summary>
    /// <param name="args"></param>
    /// <exception cref="InvalidOperationException"></exception>
    public static void Main(string[] args)
    {
        var builder = WebApplication.CreateBuilder(args);

        // Add services to the container.
        var connectionString = builder.Configuration.GetConnectionString("DefaultConnection") ?? throw new InvalidOperationException("Connection string 'DefaultConnection' not found.");
        var connectionString2 = builder.Configuration.GetConnectionString("IdentityConnection") ?? throw new InvalidOperationException("Connection string 'DefaultConnection' not found.");

        builder.Services.AddDbContext<Context>(options =>
            options.UseSqlServer(connectionString));

        builder.Services.AddDatabaseDeveloperPageExceptionFilter();

        builder.Services.AddDbContext<ApplicationDbContext>(options =>
                             options.UseSqlServer(connectionString2));

        builder.Services.AddIdentity<IdentityUser, IdentityRole>(
                                            options =>
                                            {
                                                options.SignIn.RequireConfirmedAccount = true;
                                                options.Password.RequireDigit = true;
                                                options.Password.RequireLowercase = true;
                                                options.Password.RequireNonAlphanumeric = true;
                                                options.Password.RequireUppercase = true;
                                                options.Password.RequiredLength = 6;
                                                options.Password.RequiredUniqueChars = 1;
                                            })
                                            .AddEntityFrameworkStores<ApplicationDbContext>()
                                            .AddDefaultTokenProviders()
                                            //.AddUserConfirmation<UserConfirmation<IdentityUser>>()
                                            .AddDefaultUI();


        builder.Services.AddControllersWithViews();

        var app = builder.Build();

        // Configure the HTTP request pipeline.
        if (app.Environment.IsDevelopment())
        {
            app.UseMigrationsEndPoint();
        }
        else
        {
            app.UseExceptionHandler("/Home/Error");
            // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
            app.UseHsts();
        }

        app.UseHttpsRedirection();
        app.UseStaticFiles();

        app.UseRouting();

        app.UseAuthorization();

        app.MapControllerRoute(
            name: "default",
            pattern: "{controller=Home}/{action=Index}/{id?}");
        app.MapRazorPages();

        app.Run();
    }
}